@startuml
'''Domain Model
hide circle
hide empty methods
hide empty attributes

class User{
name
bio
}

class ProfileDatabase{
}

class Profile{
email
password
dateCreated
}

class SongDatabase{
}


class Song{
id
name
artist
fileLocation
}

class Playlist{
duration
name
}

User "1" -down- "*" Playlist : \t created \t
User "1" -left- "*" Song : \t uploads \t\t
User "1" - "*" User : follows \t

ProfileDatabase "1" -down- "*" User : \t stores \t
ProfileDatabase "1" -left- "*" Profile : \t stores \t

Playlist "1" -up- "*" Song : contains \t

SongDatabase "1" - "*" Song : \t contains \t\t
@enduml

@startuml
'''Play a song
actor User
participant View
control Controller
entity SongDatabase


User -> View: Inputs Song Title
User -> View: Inputs Artist Name
View -> Controller: SearchSongName
View -> Controller: SearchArtistName
Controller -> SongDatabase: SearchSongName
Controller -> SongDatabase: SearchArtistName
SongDatabase -> Controller: songList
SongDatabase -> Controller: songList
Controller -> View: songList
Controller -> View: songList
View -> User: Choose song from list
View -> User: Choose artist from list
User -> View: Chooses song from list
View -> Controller: playSong
Controller -> SongDatabase: playSong
SongDatabase -> Controller: returns True
Controller -> View: returns True
View -> User: Plays song

@enduml

@startuml
'''Class diagram
'''All the classes that were going to have
'''View, Controller, ProfileDatabase, Profile, SongDatabase (should have search method), Song (play song method should be here)
hide empty methods
hide empty attributes


class View{
    {method} main
}

class Controller{
    {method} login
    {method} createUser
    {method} searchSongName
    {method} searchArtistName
    {method} playSong
}

class profileDatabase{
    {method}
}

class Profile{
    {field} username
    {field} password
    {method} checkLogin
    {method} createUserAccount
}

class Song{
    {field} songName
    {field} artist
    {method} toString
}

class SongDatabase{
    {method} searchSong
    {method} searchArtist
    {method} play
}

View --> Controller
Controller --> profileDatabase
Controller --> SongDatabase
profileDatabase --> Profile
SongDatabase --> Song

@enduml